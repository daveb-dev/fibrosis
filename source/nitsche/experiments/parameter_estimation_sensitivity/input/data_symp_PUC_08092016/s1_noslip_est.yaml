# Set of default parameters for steady Navier-Stokes
mesh:       './meshes/coarc2d_f0.6_d0.05_ns1_h0.05.h5'
rho:        1.0
mu:         0.035
# mu:         0.000291666667

# u* = u/umax, x* = x/R (R=1!, same grid), p*=p/(rho u**2)
# --> Re = rho*umax/mu
# "physical", but not correct here: Dh = 2*R, u_bulk = u_mean = 2./3*u_max
# --> mu = 0.035 & U = 60 --> Re = 2285.714

boundary_conditions: 
    - id: 1
      preset: 'inlet'
      value: 
          R: 0.95
          U: 100.5
      symmetric: True
    - id: 2
      preset: 'outlet'
      value: 0.
    - id: 3
      preset: 'symmetry'
      type: 'dirichlet'
      method: 'essential'
    - id: 4
      preset: 'noslip'
      value: [0., 0.]
      method: 'essential'

estimation:
    method: 'dummy'      # BFGS, Powell, Nelder-Mead, bruteforce, gpyopt
    parameter: 3    # optimization param: 0: gm factor, 1: R_out, 2: dR, 3: inflow, -1: none
    xfun: 0     # param function: y(x): 0: x, 1: 2**x, 2: abs(x), 3: x**2
    navierslip_id: 0    # list of boundary ids to be optimized (as specified above)
                        # 0: any
    nitsche_id: 0       # NOTE: IGNORED, JUST ONE BETA FOR ALL BOUNDARIES
    nitsche:
        opt_beta: 0     # True/False switch
        bounds: [200, 400]      # only for tanh(x) and lower limit for 2**x
        xfun: 2     # 0: x,     1:  2**x,   2:  ~tanh(x)
    gpyopt:
        bounds: [[-6., -4.5]] # [[-7.5, -4.], [-7.5, -4.], [-7.5, -4.], [-7.5, -4.]]
        x0:  [[-5.2]]
        acq_type: 'EI'
        model_type: 'GP'
        max_iter: 100
        max_time: 120
    bruteforce:
        bounds: [[-7., 2.], [400, 1000]] #, [-6., 2.], [-6., 2.]]
        numpts: 5
        as_slice: 1     # T/F switch uses bounds/slice(a, b, step)
                        # numpts must be INT if as_slice == 0
    norm: 'l2'      # 'l2', 'linf'
    error: 'abs'    # 'abs', 'rel'
    squared: True
    tikhonov: 0.
    measurement: 
        mesh: './meshes/coarc2d_f0.6_d0.05_ns4_h0.05.h5'
        elements: 'P1'  # P1, P2

# solver setup
elements:   'Mini'
use_temam:  True
backflowstab:
    outlet: True
    nitsche: 2    # (nitsche bnds) 0: None, 1: (u.n), 2: |u.n|_
fix_pressure: False
fix_pressure_point: [0., 0.]

nitsche: 
    method: 1      # 0: skew-symmetric, 1: positive (0 slightly faster conv?)
    beta1: 0.     # 1e5 best for noslip @ Re = 1000
    beta2: 0.0

nonlinear:
    method: 'newton'
    maxit: 35
    init_steps: 15
    init_atol: 1.e-2
    use_aitken: 1   #  0: False, 1: Picard only, 2: all
    report: 1       # 0: None, 1: residuals, 2: residuals and energy (inflow/driving/forcing via ESSENTIAL Dbcs!)
    atol: 1.e-10    # note: dot required!!
    rtol: 1.e-16
    stol: 0.0

linear:
    method: 'mumps'


    
    
